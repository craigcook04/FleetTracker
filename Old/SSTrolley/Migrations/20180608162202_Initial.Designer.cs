// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SSTrolley.Models;
using System;

namespace SSTrolley.Migrations
{
    [DbContext(typeof(TrolleyContext))]
    [Migration("20180608162202_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SSTrolley.Models.PassengerPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("Arrived");

                    b.Property<short>("Departed");

                    b.Property<short>("Passengers");

                    b.Property<int>("PointId");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("SSTrolley.Models.RoutePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Index");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int>("RouteId");

                    b.HasKey("Id");

                    b.ToTable("RoutePoints");
                });

            modelBuilder.Entity("SSTrolley.Models.StopPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalInfo");

                    b.Property<string>("Address");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<int>("RouteId");

                    b.Property<int>("RoutePointId");

                    b.Property<int>("StopNumber");

                    b.HasKey("Id");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("SSTrolley.Models.StopPointTrolleyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("DistanceFromTrolley");

                    b.Property<int>("StopId");

                    b.Property<double>("TimeFromTrolley");

                    b.Property<int>("TrolleyId");

                    b.HasKey("Id");

                    b.ToTable("StopTrolleyInfo");
                });

            modelBuilder.Entity("SSTrolley.Models.Trolley", b =>
                {
                    b.Property<int>("Id");

                    b.Property<byte[]>("Hash");

                    b.Property<double>("Heading");

                    b.Property<double>("LastLatitude");

                    b.Property<double>("LastLongitude");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<short>("MaxPassengers");

                    b.Property<short>("PassengerCount");

                    b.Property<int>("RouteId");

                    b.Property<byte[]>("Salt");

                    b.Property<double>("TotalDistance");

                    b.Property<double>("TotalPassengers");

                    b.HasKey("Id");

                    b.ToTable("Trolleys");
                });

            modelBuilder.Entity("SSTrolley.Models.TrolleyPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("TrolleyId");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
